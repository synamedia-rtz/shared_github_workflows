name: Deploy

permissions:
  contents: read
  id-token: write ## enable aws role-based authentication
  deployments: write
on:
  workflow_dispatch: ## manual execution
    inputs:
        environment:
          type: environment
        aws_region:
          type: string
          default: us-east-2
  workflow_call: ## call from upper workflow
    inputs:
      environment:
        required: false
        type: string
      aws_region:
        required: false
        type: string
        default: us-east-2
    secrets:
      PAT:
        required: false
      AWS_ROLE_TO_ASSUME:
        required: false
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
env:
  AWS_REGION: ${{ inputs.aws_region || 'us-east-2' }}
  SAM_CLI_TELEMETRY: 0
  NODE_AUTH_TOKEN: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
jobs:
  run:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT || 'development' }}
    steps:
      - uses: actions/checkout@v2 #required for caching
      - uses: actions/setup-python@v4
      - uses: aws-actions/setup-sam@v1
      - uses: actions/setup-node@v2
        if: hashFiles(' package-lock.json') != ''
        with:
          node-version: 14.x
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@synamedia-rtz'
      - run: |
          echo npm.pkg.github.com/:_authToken=\${NODE_AUTH_TOKEN} > .npmrc
        if: hashFiles(' package-lock.json') != ''
      - uses: aws-actions/configure-aws-credentials@e21f7333e801ca751f058cc52de17f0ee6e1da6f
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: stack-name
        run: echo "::set-output name=value::$(echo ${{ github.repository }}-${{ inputs.ENVIRONMENT || github.ref_name }} | cut -d '/' -f2-|sed "s@/@-@"|sed "s@_@-@")"
      - run: |
          sam deploy --debug --no-confirm-changeset --no-fail-on-empty-changeset --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
              --config-env ${{ inputs.ENVIRONMENT || 'default' }} \
              --region ${{ env.AWS_REGION }} \
              --stack-name  ${{ steps.stack-name.outputs.value }}
              # --parameter-overrides 'Environment=${{ inputs.ENVIRONMENT || 'development' }}
